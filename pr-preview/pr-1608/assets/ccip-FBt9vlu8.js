import{iR as f,iS as b,iT as m,iU as y,iV as w,iW as R,iX as T,iY as _,iZ as C,i_ as g,i$ as E,__tla as P}from"./index-DxXVDKDy.js";let h,k,p,O,v=Promise.all([(()=>{try{return P}catch{}})()]).then(async()=>{class x extends f{constructor({callbackSelector:e,cause:a,data:o,extraData:c,sender:l,urls:t}){var i;super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],(i=a.metaMessages)!=null&&i.length?"":[],"Offchain Gateway Call:",t&&["  Gateway URL(s):",...t.map(d=>`    ${b(d)}`)],`  Sender: ${l}`,`  Data: ${o}`,`  Callback selector: ${e}`,`  Extra data: ${c}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class L extends f{constructor({result:e,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${b(a)}`,`Response: ${m(e)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class $ extends f{constructor({sender:e,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${e}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}function S(n,e){if(!y(n))throw new w({address:n});if(!y(e))throw new w({address:e});return n.toLowerCase()===e.toLowerCase()}O="0x556f1830",p={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]},k=async function(n,{blockNumber:e,blockTag:a,data:o,to:c}){const{args:l}=R({data:o,abi:[p]}),[t,i,d,s,r]=l;try{if(!S(c,t))throw new $({sender:t,to:c});const u=await h({data:d,sender:t,urls:i}),{data:M}=await T(n,{blockNumber:e,blockTag:a,data:_([s,C([{type:"bytes"},{type:"bytes"}],[u,r])]),to:c});return M}catch(u){throw new x({callbackSelector:s,cause:u,data:o,extraData:r,sender:t,urls:i})}},h=async function({data:n,sender:e,urls:a}){var c;let o=new Error("An unknown error occurred.");for(let l=0;l<a.length;l++){const t=a[l],i=t.includes("{data}")?"GET":"POST",d=i==="POST"?{data:n,sender:e}:void 0;try{const s=await fetch(t.replace("{sender}",e).replace("{data}",n),{body:JSON.stringify(d),method:i});let r;if((c=s.headers.get("Content-Type"))!=null&&c.startsWith("application/json")?r=(await s.json()).data:r=await s.text(),!s.ok){o=new g({body:d,details:r!=null&&r.error?m(r.error):s.statusText,headers:s.headers,status:s.status,url:t});continue}if(!E(r)){o=new L({result:r,url:t});continue}return r}catch(s){o=new g({body:d,details:s.message,url:t})}}throw o}});export{v as __tla,h as ccipFetch,k as offchainLookup,p as offchainLookupAbiItem,O as offchainLookupSignature};
