import{ea as ne,eb as ie,bi as v,b1 as e,b2 as r,ec as D,dV as U,dT as te,bY as b,aY as A,a_ as j,bp as u,b$ as Z,dw as B,cC as G,aZ as H,b0 as w,cI as re,cJ as J,ed as le,bq as oe,dY as ce,dZ as de,cG as he,ee as ge,__tla as xe}from"./index-CeMkHOPW.js";import{u as W,__tla as ue}from"./useMutation-BNLxKrvZ.js";import{S as pe,__tla as me}from"./Stepper-CGm0LTox.js";import{g as fe,__tla as ye}from"./Common.utils-CTp0pXxG.js";import{c as be,a as Q,u as je,F as we,b as Ce,__tla as Ie}from"./index.esm-CPNucL0G.js";import{i as _e,__tla as ve}from"./ValidationHelper-f9RMgc5M.js";import{C as Se,__tla as ke}from"./ContentLayout-CWz9wdQj.js";let X,De=Promise.all([(()=>{try{return xe}catch{}})(),(()=>{try{return ue}catch{}})(),(()=>{try{return me}catch{}})(),(()=>{try{return ye}catch{}})(),(()=>{try{return Ie}catch{}})(),(()=>{try{return ve}catch{}})(),(()=>{try{return ke}catch{}})()]).then(async()=>{let T,P,E,M,N,K,F,S,R,V,C,$,q,z,Y;T=a=>a,P=a=>a,E=({userPushSDKInstance:a,alias:s})=>a.channel.alias.initiate(s).then(T),M=({userPushSDKInstance:a,channelAddress:s})=>a.channel.alias.verify(s).then(P),N=()=>W({mutationKey:[ne],mutationFn:E}),K=()=>W({mutationKey:[ie],mutationFn:M}),F=[{label:"New Address",value:"newaddress"},{label:"Change Network",value:"changenetwork"},{label:"Verify Alias Chain",value:"verifyalias"}],S=v.allowedNetworks.filter(a=>a!=v.coreContractChain),R=be().shape({alias:Q().required("Address is required").test("is-valid-address","Invalid wallet address",_e),chainId:Q().required("ChainId is required")}),V=({children:a,onSubmit:s})=>{const t=je({initialValues:{alias:"",chainId:S[0].toString()},validationSchema:R,onSubmit:s});return e.jsx(we,{value:t,children:a})},C=()=>{const a=Ce();if(!a)throw new Error("useChainAliasFormikContext must be used within a FormikChainAliasProvider");return a},$=({isLoading:a,channelDetails:s})=>{const t=fe(S),{values:d,handleSubmit:h,handleChange:g,errors:n,touched:i}=C(),x=s==null?void 0:s.aliases.find(o=>o.alias_blockchain_id===d.chainId),p=()=>!(!x&&d.alias);return e.jsxs(r,{width:"100%",display:"flex",flexDirection:"column",gap:"spacing-lg",children:[x&&e.jsx(D,{variant:"error",heading:"Channel already exists on this chain. Select a different chain to proceed.",showIcon:!0}),e.jsx("form",{onSubmit:h,children:e.jsxs(r,{display:"flex",flexDirection:"column",alignItems:"center",width:"100%",gap:"spacing-xl",children:[e.jsxs(r,{display:"flex",flexDirection:{ml:"column",dp:"row"},gap:"spacing-xs",alignItems:"flex-start",width:"100%",children:[e.jsx(U,{label:"Your Address on New Chain",description:"Make sure you own this alias as verification will take place.",value:d.alias,onChange:g("alias"),error:(i==null?void 0:i.alias)&&!!(n!=null&&n.alias),errorMessage:i!=null&&i.alias?n==null?void 0:n.alias:""}),e.jsx(r,{display:"flex",alignSelf:"center",width:{dp:"auto",ml:"100%"},margin:"spacing-xxxs spacing-none spacing-none spacing-none",children:e.jsx(te,{options:t,value:d.chainId,onSelect:g("chainId"),error:(i==null?void 0:i.chainId)&&!!(n!=null&&n.chainId),errorMessage:i!=null&&i.chainId?n.chainId:""})})]}),e.jsx(b,{disabled:p(),variant:"primary",loading:a,children:a?"Adding new chain":"Add"})]})})]})},q=({handleNextStep:a})=>{const{switchChain:s,chainId:t}=A(),{values:d}=C(),h=parseInt(d.chainId);return j.useEffect(()=>{t===h&&a("verifyalias")},[t]),e.jsxs(r,{display:"flex",flexDirection:"column",gap:"spacing-xl",alignItems:"center",children:[e.jsx(u,{variant:"bs-semibold",color:"text-primary",children:"Switch to the desired chain in your wallet to add it to your channel."}),e.jsx(b,{onClick:()=>s(h),children:"Change Network"})]})},z=({alaisDetails:a})=>{const{userPushSDKInstance:s}=Z(l=>l.user),{account:t,chainId:d}=A(),{mutate:h,isPending:g}=K(),{values:n}=C(),i=parseInt(n.chainId),{data:x}=B((a==null?void 0:a.channel)||""),p=n.alias,o=G(),f=H(),m=x==null?void 0:x.aliases.find(l=>l.alias_blockchain_id===n.chainId&&l.is_alias_verified),I=m?"Channel already exists on this chain.":t!==p?"Incorrect address. Connect using the correct address to proceed.":"",y=()=>!(!m&&d===i&&t===p),_=()=>{h({userPushSDKInstance:s,channelAddress:(a==null?void 0:a.channel)??""},{onSuccess:()=>{o.showMessageToast({toastTitle:"Success",toastMessage:"Verification Successful",toastType:"SUCCESS",getToastIcon:l=>e.jsx(re,{size:l,color:"green"})}),f(`${w.ChannelDashboard}/${t}}`)},onError:l=>{l&&o.showMessageToast({toastTitle:"Error",toastMessage:l.message,toastType:"ERROR",getToastIcon:k=>e.jsx(J,{size:k,color:"red"})})}})};return e.jsxs(r,{display:"flex",flexDirection:"column",gap:"spacing-xl",width:"100%",alignItems:"center",children:[I&&e.jsx(r,{width:"100%",children:e.jsx(D,{variant:"error",heading:I,showIcon:!0,onAction:m?()=>f(`${w.ChannelDashboard}/${t}}`):void 0,actionText:m?"Back to Home":void 0})}),e.jsxs(r,{display:"flex",flexDirection:"column",gap:"spacing-sm",children:[e.jsxs(u,{variant:"bs-semibold",textAlign:"center",color:"text-primary",children:["You\u2019re almost there!",e.jsx("br",{})," Verify the address on the new chain to send notifications."]}),e.jsx(U,{disabled:!0,value:p})]}),e.jsx(b,{disabled:y(),onClick:_,loading:g,children:g?"Verifying":"Verify New Address"})]})},Y=()=>{const[a,s]=j.useState("newaddress"),[t,d]=j.useState(["newaddress"]),[h,g]=j.useState(!0),n=G(),{mutate:i,isPending:x,isError:p}=N(),{userPushSDKInstance:o}=Z(c=>c.user),{account:f,chainId:m,switchChain:I}=A(),{data:y}=B(f),{data:_}=le({alias:f,aliasChain:ge[m]}),l=H();j.useEffect(()=>{g(o&&(o==null?void 0:o.readmode()))},[o]);const k=(c,ae)=>{i({userPushSDKInstance:o,alias:he(c,parseInt(ae))},{onSuccess:()=>{L("changenetwork")},onError:O=>{O&&n.showMessageToast({toastTitle:"Error",toastMessage:O.message,toastType:"ERROR",getToastIcon:se=>e.jsx(J,{size:se,color:"red"})})}})},L=c=>{d([...new Set([...t,c])]),s(c)},ee=()=>{l(y?`${w.ChannelDashboard}/${f}}`:w.WelcomeDashboard),g(!1)};return e.jsx(V,{onSubmit:c=>k(c.alias,c.chainId),children:e.jsxs(r,{display:"flex",flexDirection:"column",gap:"spacing-sm",alignItems:"center",children:[e.jsxs(r,{display:"flex",flexDirection:"column",alignItems:"center",margin:{ml:"spacing-lg spacing-md spacing-none spacing-md",dp:"spacing-lg spacing-none spacing-none spacing-none"},padding:{dp:"spacing-lg",ml:"spacing-sm"},gap:"spacing-lg",borderRadius:"radius-lg",backgroundColor:"surface-primary",children:[e.jsxs(r,{display:"flex",flexDirection:"column",alignItems:"center",gap:"spacing-xxxs",children:[e.jsx(u,{color:"text-primary",variant:"h3-semibold",display:{ml:"none",dp:"block"},children:"Add New Chain to Channel"}),e.jsx(u,{color:"text-primary",variant:"h4-semibold",display:{ml:"block",dp:"none"},children:"Add New Chain to Channel"}),e.jsx(u,{color:"text-tertiary",variant:"bs-regular",display:{ml:"none",dp:"block"},children:"Add an alias chain to your channel to enable notifications to that chain."}),e.jsx(u,{display:{ml:"block",dp:"none"},color:"text-tertiary",variant:"bes-regular",children:"Add an alias chain to your channel to enable notifications to that chain."})]}),m!==v.coreContractChain&&t.length===1?e.jsxs(e.Fragment,{children:[e.jsx(r,{display:"flex",padding:"spacing-md",flexDirection:"column",gap:"spacing-sm",alignSelf:"stretch",alignItems:"flex-start",borderRadius:"radius-sm",backgroundColor:"surface-secondary",children:e.jsx(u,{textAlign:"center",color:"text-brand-medium",variant:"h5-semibold",children:"Please change your network to Ethereum to proceed."})}),e.jsx(b,{onClick:()=>I(v.coreContractChain),children:"Change Network"})]}):y||_?e.jsxs(e.Fragment,{children:[e.jsx(pe,{steps:F,completedSteps:t,setActiveStepKey:c=>s(c)}),a==="newaddress"&&e.jsx($,{isLoading:x&&!p,channelDetails:y}),a==="changenetwork"&&e.jsx(q,{handleNextStep:L}),a==="verifyalias"&&e.jsx(z,{alaisDetails:_}),h&&e.jsx(r,{display:"flex",justifyContent:"center",width:"-webkit-fill-available",alignItems:"center",css:oe`
                    z-index: 99999;
                  `,children:e.jsx(ce,{type:de.MODAL,showConnectModal:!0,onClose:ee})})]}):e.jsxs(e.Fragment,{children:[e.jsx(D,{variant:"error",showIcon:!0,heading:"User does not have a channel on Push. Create a channel to proceed."}),e.jsx(b,{onClick:()=>l(w.CreateChannel),children:"Create Channel"})]})]}),e.jsx(u,{color:"text-tertiary",variant:"c-semibold",children:"Tip: Please do not exit the process before the address is verified. If you leave, you will need to start over."})]})})},X=()=>e.jsx(Se,{children:e.jsx(Y,{})})});export{De as __tla,X as default};
