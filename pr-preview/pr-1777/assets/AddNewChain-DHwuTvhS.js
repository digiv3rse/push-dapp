import{aZ as e,bg as l,cQ as h,el as Y,em as U,bd as Z,bc as B,en as G,dQ as K,eo as H,bM as m,b9 as J,b7 as y,bP as N,dd as R,bL as W,c_ as V,dv as X,bb as $,dg as q,bh as ee,ep as ae,eq as se,__tla as ne}from"./index-6qj2EOfW.js";import{u as F,__tla as ie}from"./useMutation-Cd0Em7vX.js";import{c as te,a as z,u as re,F as le,b as oe,__tla as ce}from"./index.esm-CK7k9HNX.js";import{i as de,__tla as he}from"./ValidationHelper-zfq5vkqr.js";import{C as pe,__tla as ue}from"./ContentLayout-CFlE4eJg.js";let L,xe=Promise.all([(()=>{try{return ne}catch{}})(),(()=>{try{return ie}catch{}})(),(()=>{try{return ce}catch{}})(),(()=>{try{return he}catch{}})(),(()=>{try{return ue}catch{}})()]).then(async()=>{let b,f,j,w,I,S,v,k,_,C,A,u,D,M,T,P;b=({steps:a,setActiveStepKey:i,completedSteps:s})=>{const c=n=>{s!=null&&s.includes(n)&&i(n)};return e.jsx(l,{display:"flex",gap:"spacing-lg",children:a.map(n=>e.jsxs(l,{display:"flex",flexDirection:"column",gap:"spacing-xs",width:"180px",cursor:"pointer",onClick:()=>c(n.key),children:[e.jsx(h,{textAlign:"center",color:s.includes(n.key)?"text-brand-medium":"text-tertiary",variant:"h5-semibold",display:{ml:"none",dp:"block"},children:n.label}),e.jsx(h,{textAlign:"center",variant:"h6-semibold",display:{ml:"block",dp:"none"},children:n.label}),e.jsx(l,{height:"4px",borderRadius:"r2",backgroundColor:s.includes(n.key)?"stroke-brand-medium":"stroke-tertiary"})]}))})},f=a=>a,j=a=>a,w=({userPushSDKInstance:a,alias:i})=>a.channel.alias.initiate(i).then(f),I=({userPushSDKInstance:a,alias:i})=>a.channel.alias.verify(i).then(j),S=()=>F({mutationKey:[Y],mutationFn:w}),v=()=>F({mutationKey:[U],mutationFn:I}),k=[{label:"New Address",key:"newaddress"},{label:"Change Network",key:"changenetwork"},{label:"Verify Alias Chain",key:"verifyalias"}],_=()=>Z.allowedNetworks.map(a=>{const i=G[a];return{value:a.toString(),label:B[a],icon:e.jsx(i,{})}}),C=te().shape({alias:z().required("Address is required").test("is-valid-address","Invalid wallet address",de),chainId:z().required("ChainId is required")}),A=({children:a,onSubmit:i})=>{const s=re({initialValues:{alias:"",chainId:"11155111"},validationSchema:C,onSubmit:i});return e.jsx(le,{value:s,children:a})},u=()=>{const a=oe();if(!a)throw new Error("useChainAliasFormikContext must be used within a FormikChainAliasProvider");return a},D=({isLoading:a})=>{const i=_(),{values:s,handleSubmit:c,handleChange:n,errors:r,touched:t}=u();return e.jsx(l,{width:"100%",children:e.jsx("form",{onSubmit:c,children:e.jsxs(l,{display:"flex",flexDirection:"column",alignItems:"center",width:"100%",gap:"spacing-xl",children:[e.jsxs(l,{display:"flex",flexDirection:{ml:"column",dp:"row"},gap:"spacing-xs",alignItems:"flex-start",width:"100%",children:[e.jsx(K,{label:"Your Address on New Chain",description:"Make sure you own this alias as verification will take place.",value:s.alias,onChange:n("alias"),error:(t==null?void 0:t.alias)&&!!(r!=null&&r.alias),errorMessage:t!=null&&t.alias?r==null?void 0:r.alias:""}),e.jsx(l,{display:"flex",alignSelf:"center",width:{dp:"auto",ml:"100%"},margin:"spacing-xxxs spacing-none spacing-none spacing-none",children:e.jsx(H,{options:i,value:s.chainId,onSelect:n("chainId"),error:(t==null?void 0:t.chainId)&&!!(r!=null&&r.chainId),errorMessage:t!=null&&t.chainId?r.chainId:""})})]}),e.jsx(m,{disabled:!s.alias||a,variant:"primary",children:a?"Initiating":"Add"})]})})})},M=({handleNextStep:a})=>{const{switchChain:i,chainId:s}=J(),{values:c}=u(),n=parseInt(c.chainId);return y.useEffect(()=>{s===n&&a("verifyalias")},[s]),e.jsxs(l,{display:"flex",flexDirection:"column",gap:"spacing-xl",alignItems:"center",children:[e.jsx(h,{variant:"bs-semibold",color:"text-primary",children:"Switch to the desired chain in your wallet to add it to your channel."}),e.jsx(m,{onClick:()=>i(n),children:"Change Network"})]})},T=()=>{const{userPushSDKInstance:a}=N(d=>d.user),{mutate:i,isPending:s}=v(),{values:c}=u(),n=R(),r=W(),t=parseInt(c.chainId),x=c.alias,p=()=>{i({userPushSDKInstance:a,alias:V(x,t)},{onSuccess:()=>{n.showMessageToast({toastTitle:"Success",toastMessage:"Verification Successful",toastType:"SUCCESS",getToastIcon:d=>e.jsx(X,{size:d,color:"green"})}),r($.Dashboard)},onError:d=>{d&&n.showMessageToast({toastTitle:"Error",toastMessage:d.message,toastType:"ERROR",getToastIcon:g=>e.jsx(q,{size:g,color:"red"})})}})};return e.jsxs(l,{display:"flex",flexDirection:"column",gap:"spacing-xl",alignItems:"center",children:[e.jsxs(l,{display:"flex",flexDirection:"column",gap:"spacing-sm",children:[e.jsxs(h,{variant:"bs-semibold",textAlign:"center",color:"text-primary",children:["You\u2019re almost there!",e.jsx("br",{})," Verify the address on the new chain to send notifications."]}),e.jsx(K,{disabled:!0,value:x})]}),e.jsx(m,{onClick:p,disabled:s,children:s?"Verifying":"Verify New Address"})]})},P=()=>{const[a,i]=y.useState("newaddress"),[s,c]=y.useState(["newaddress"]),n=R(),{mutate:r,isPending:t,isError:x}=S(),{userPushSDKInstance:p}=N(o=>o.user),d=(o,O)=>{r({userPushSDKInstance:p,alias:V(o,parseInt(O))},{onSuccess:()=>{g("changenetwork")},onError:E=>{E&&n.showMessageToast({toastTitle:"Error",toastMessage:E.message,toastType:"ERROR",getToastIcon:Q=>e.jsx(q,{size:Q,color:"red"})})}})},g=o=>{c([...new Set([...s,o])]),i(o)};return e.jsx(A,{onSubmit:o=>d(o.alias,o.chainId),children:e.jsxs(l,{display:"flex",flexDirection:"column",alignItems:"center",margin:{ml:"spacing-lg spacing-md",dp:"spacing-lg spacing-none spacing-none spacing-none"},padding:{dp:"spacing-lg",ml:"spacing-sm"},gap:"spacing-lg",borderRadius:"radius-lg",backgroundColor:"surface-primary",children:[e.jsxs(l,{display:"flex",flexDirection:"column",alignItems:"center",gap:"spacing-xxxs",children:[e.jsx(h,{color:"text-primary",variant:"h3-semibold",display:{ml:"none",dp:"block"},children:"Add New Chain to Channel"}),e.jsx(h,{color:"text-primary",variant:"h4-semibold",display:{ml:"block",dp:"none"},children:"Add New Chain to Channel"}),e.jsx(h,{color:"text-tertiary",variant:"bs-regular",display:{ml:"none",dp:"block"},children:"Add an alias chain to your channel to enable notifications to that chain."}),e.jsx(h,{display:{ml:"block",dp:"none"},color:"text-tertiary",variant:"bes-regular",children:"Add an alias chain to your channel to enable notifications to that chain."})]}),e.jsx(b,{steps:k,completedSteps:s,setActiveStepKey:o=>i(o)}),a==="newaddress"&&e.jsx(D,{isLoading:t&&!x}),a==="changenetwork"&&e.jsx(M,{handleNextStep:g}),a==="verifyalias"&&e.jsx(T,{}),p&&(p==null?void 0:p.readmode())&&e.jsx(l,{display:"flex",justifyContent:"center",width:"-webkit-fill-available",alignItems:"center",css:ee`
              z-index: 99999;
            `,children:e.jsx(ae,{type:se.MODAL,showConnectModal:!0})})]})})},L=()=>e.jsx(pe,{children:e.jsx(P,{})})});export{xe as __tla,L as default};
