import{bk as s,bl as t,bm as a,bn as h,bo as p,__tla as m}from"./index-0q_PB2hm.js";let w,T,k,d,y,f,g=Promise.all([(()=>{try{return m}catch{}})()]).then(async()=>{T=async({address:o,provider:e,contractAddress:r})=>{try{const n=await new s(t.pushToken,a.pushToken,e).allowance(o,r);return h(n.toString())}catch(n){console.error(n.message)}},w=async({address:o,provider:e,noOfPushTokensToCheck:r})=>{try{const n=await new s(t.pushToken,a.pushToken,e).balanceOf(o);return+h(n.toString())>=r}catch(n){console.error(n.message)}},d=async({address:o,provider:e})=>{try{const r=await new s(t.pushToken,a.pushToken,e).balanceOf(o);return+h(r.toString())}catch(r){console.error(r.message)}},k=async({signer:o,contractAddress:e,amount:r})=>{try{const n=new s(t.pushToken,a.pushToken,o),i=p(r.toString(),18);return await(await n.approve(e,i)).wait(),!0}catch(n){throw console.error(n),n}},y=async()=>{try{const o="Ethereum Push Notification Service",e="PUSH";return!0}catch(o){throw console.error(o),o}},f=async({noOfTokens:o,provider:e,account:r})=>{try{var n=e.getSigner(r);let c=new s(t.pushToken,a.pushToken,n);console.info({pushTokenContract:c}),console.info(1);const l=p(o.toString(),18);console.info(l);var i=c.mint(l);console.info(3);const u=await i;return console.info(u),await e.waitForTransaction(u.hash),console.info(4),console.info("Transaction Completed"),o}catch(c){return console.error(c),0}}});export{g as __tla,w as a,T as b,k as c,d as g,y as i,f as m};
